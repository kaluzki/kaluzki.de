# docker compose --env-file /apps/.env up --remove-orphans -d
version: "3.8"

services:

  traefik:
    image: traefik:2.10.4
    hostname: traefik
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/data
      - ${APPS_TRAEFIK_CONFIG:-/dev/null}:/config:ro
    environment:
      - TZ=${APPS_TZ:-Europe/Berlin}
    command:
      # https://doc.traefik.io/traefik/operations/api/
      - --api=true
      - --api.dashboard=true
      - --api.insecure=false
      #- --api.debug=true
      # https://doc.traefik.io/traefik/observability/logs/
      - --log.level=warning
      # https://doc.traefik.io/traefik/observability/access-logs/
      - --accesslog=true
      - --accesslog.fields.names.StartUTC=drop
      # https://doc.traefik.io/traefik/observability/metrics/prometheus/
      - --metrics.prometheus=true
      - --metrics.prometheus.addrouterslabels=true
      # https://doc.traefik.io/traefik/observability/tracing/overview/
      #- --tracing=true
      #- --tracing.datadog=true
      # https://doc.traefik.io/traefik/providers/docker/
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # https://doc.traefik.io/traefik/providers/file/
      #- --providers.file.directory=/config
      #- --providers.file.watch=true
      # https://doc.traefik.io/traefik/middlewares/http/redirectscheme/
      - --entrypoints.80.address=:80
      - --entrypoints.80.http.redirections.entrypoint.to=:443
      - --entrypoints.80.http.redirections.entrypoint.scheme=https
      - --entrypoints.80.http.redirections.entrypoint.permanent=true
      - --entrypoints.443.address=:443
      - --certificatesresolvers.certs.acme.storage=/data/acme.json
      - --certificatesresolvers.certs.acme.httpchallenge.entrypoint=80
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.entrypoints: 443
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: certs
      # https://github.com/traefik/traefik/issues/5853#issuecomment-663914401
      traefik.http.routers.traefik.rule: Host(`${APPS_DOMAIN:-app.localhost}`) && (PathPrefix(`/traefik/`) || HeadersRegexp(`Referer`, `.*/traefik/.*`))
      # https://doc.traefik.io/traefik/middlewares/http/stripprefixregex/
      traefik.http.middlewares.traefik-strip.stripprefix.prefixes: /traefik/
      traefik.http.routers.traefik.middlewares: auth,traefik-strip
      # https://doc.traefik.io/traefik/middlewares/http/basicauth/
      # sudo apt install -y apache2-utils
      # htpasswd -nB admin
      # escape '$' with '$$' in docker-compose.yml
      traefik.http.middlewares.auth.basicauth.users: ${APPS_AUTH:-admin:$$2y$$05$$dyoejH44m0Lrpvg1bVaF4.ZGlGMOzTyMGZjU6qkal1TGSyUN4FwRS}
    depends_on:
      - traefik-data

  traefik-data:
    image: busybox
    container_name: traefik-data
    network_mode: "none"
    restart: "no"
    volumes:
      - traefik:/data
    command: sh -c "chmod -Rv 600 /data/*"

  prometheus:
    image: prom/prometheus:v2.46.0
    hostname: prometheus
    container_name: prometheus
    volumes:
      - ./etc/prometheus.yml:/etc/prometheus.yml:ro
      - prometheus:/data

    # https://prometheus.io/docs/prometheus/latest/command-line/prometheus/
    command:
      - --log.level=warn
      - --config.file=/etc/prometheus.yml
      - --storage.tsdb.retention.size=256MB
      - --web.external-url=/prometheus/
    labels:
      traefik.enable: true
      traefik.http.services.prometheus.loadbalancer.server.port: 9090
      traefik.http.routers.prometheus.service: prometheus
      traefik.http.routers.prometheus.entrypoints: 443
      traefik.http.routers.prometheus.tls: true
      traefik.http.routers.prometheus.tls.certresolver: certs
      traefik.http.routers.prometheus.rule: Host(`${APPS_DOMAIN:-app.localhost}`) && PathPrefix(`/prometheus`)
      traefik.http.routers.prometheus.middlewares: auth

volumes:
  traefik:
    name: traefik
  prometheus:
    name: prometheus

networks:
  default:
    name: ${APPS_NET:-apps}
    # docker network create apps
    external: true
